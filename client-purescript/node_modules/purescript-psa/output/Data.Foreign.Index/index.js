// Generated by psc version 0.8.5.0

/**
 *  | This module defines a type class for types which act like
 *  | _property indices_.
 */
"use strict";
var $foreign = require("./foreign");
var Prelude = require("../Prelude");
var Data_Either = require("../Data.Either");
var Data_Foreign = require("../Data.Foreign");
var Data_Function = require("../Data.Function");
var Data_Int = require("../Data.Int");

/**
 *  | This type class identifies types wich act like _property indices_.
 *  |
 *  | The canonical instances are for `String`s and `Number`s.
 */
var Index = function (errorAt, hasOwnProperty, hasProperty, ix) {
    this.errorAt = errorAt;
    this.hasOwnProperty = hasOwnProperty;
    this.hasProperty = hasProperty;
    this.ix = ix;
};
var unsafeReadProp = function (k) {
    return function (value) {
        return $foreign.unsafeReadPropImpl(new Data_Either.Left(new Data_Foreign.TypeMismatch("object", Data_Foreign.typeOf(value))), Prelude.pure(Data_Either.applicativeEither), k, value);
    };
};

/**
 *  | Attempt to read a value from a foreign value property
 */
var prop = unsafeReadProp;

/**
 *  | This type class identifies types wich act like _property indices_.
 *  |
 *  | The canonical instances are for `String`s and `Number`s.
 */
var ix = function (dict) {
    return dict.ix;
};

/**
 *  | An infix alias for `ix`.
 */
var $bang = function (dictIndex) {
    return ix(dictIndex);
};

/**
 *  | Attempt to read a value from a foreign value at the specified numeric index
 */
var index = unsafeReadProp;
var hasPropertyImpl = function (v) {
    return function (value) {
        if (Data_Foreign.isNull(value)) {
            return false;
        };
        if (Data_Foreign.isUndefined(value)) {
            return false;
        };
        if (Data_Foreign.typeOf(value) === "object" || Data_Foreign.typeOf(value) === "function") {
            return $foreign.unsafeHasProperty(v, value);
        };
        return false;
    };
};

/**
 *  | This type class identifies types wich act like _property indices_.
 *  |
 *  | The canonical instances are for `String`s and `Number`s.
 */
var hasProperty = function (dict) {
    return dict.hasProperty;
};
var hasOwnPropertyImpl = function (v) {
    return function (value) {
        if (Data_Foreign.isNull(value)) {
            return false;
        };
        if (Data_Foreign.isUndefined(value)) {
            return false;
        };
        if (Data_Foreign.typeOf(value) === "object" || Data_Foreign.typeOf(value) === "function") {
            return $foreign.unsafeHasOwnProperty(v, value);
        };
        return false;
    };
};
var indexInt = new Index(Data_Foreign.ErrorAtIndex.create, hasOwnPropertyImpl, hasPropertyImpl, Prelude.flip(index));
var indexString = new Index(Data_Foreign.ErrorAtProperty.create, hasOwnPropertyImpl, hasPropertyImpl, Prelude.flip(prop));

/**
 *  | This type class identifies types wich act like _property indices_.
 *  |
 *  | The canonical instances are for `String`s and `Number`s.
 */
var hasOwnProperty = function (dict) {
    return dict.hasOwnProperty;
};

/**
 *  | This type class identifies types wich act like _property indices_.
 *  |
 *  | The canonical instances are for `String`s and `Number`s.
 */
var errorAt = function (dict) {
    return dict.errorAt;
};
module.exports = {
    Index: Index, 
    errorAt: errorAt, 
    hasOwnProperty: hasOwnProperty, 
    hasProperty: hasProperty, 
    "!": $bang, 
    ix: ix, 
    index: index, 
    prop: prop, 
    indexString: indexString, 
    indexInt: indexInt
};
