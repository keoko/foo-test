// Generated by psc version 0.8.5.0
"use strict";
var Prelude = require("../Prelude");
var Data_Maybe = require("../Data.Maybe");
var Data_Foreign = require("../Data.Foreign");
var Data_Either = require("../Data.Either");

/**
 *  | A `newtype` wrapper whose `IsForeign` instance correctly handles
 *  | undefined values.
 *  |
 *  | Conceptually, this type represents values which may be `undefined`,
 *  | but not `null`.
 */
var Undefined = function (x) {
    return x;
};

/**
 *  | Unwrap an `Undefined` value
 */
var runUndefined = function (v) {
    return v;
};

/**
 *  | Read an `Undefined` value
 */
var readUndefined = function (v) {
    return function (value) {
        if (Data_Foreign.isUndefined(value)) {
            return Prelude.pure(Data_Either.applicativeEither)(Data_Maybe.Nothing.value);
        };
        return Prelude["<$>"](Data_Either.functorEither)(function ($5) {
            return Undefined(Data_Maybe.Just.create($5));
        })(v(value));
    };
};
module.exports = {
    Undefined: Undefined, 
    readUndefined: readUndefined, 
    runUndefined: runUndefined
};
