// Generated by psc version 0.8.5.0

/**
 *  | This module defines helper functions for working with `Monad` instances.
 */
"use strict";
var Prelude = require("../Prelude");

/**
 *  | Perform a monadic action when a condition is true.
 */
var when = function (dictMonad) {
    return function (v) {
        return function (v1) {
            if (v) {
                return v1;
            };
            if (!v) {
                return Prelude["return"](dictMonad["__superclass_Prelude.Applicative_0"]())(Prelude.unit);
            };
            throw new Error("Failed pattern match at Control.Monad line 9, column 1 - line 10, column 1: " + [ v.constructor.name, v1.constructor.name ]);
        };
    };
};

/**
 *  | Perform a monadic action unless a condition is true.
 */
var unless = function (dictMonad) {
    return function (v) {
        return function (v1) {
            if (!v) {
                return v1;
            };
            if (v) {
                return Prelude["return"](dictMonad["__superclass_Prelude.Applicative_0"]())(Prelude.unit);
            };
            throw new Error("Failed pattern match at Control.Monad line 14, column 1 - line 15, column 1: " + [ v.constructor.name, v1.constructor.name ]);
        };
    };
};
module.exports = {
    unless: unless, 
    when: when
};
