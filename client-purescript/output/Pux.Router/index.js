// Generated by psc version 0.10.2
"use strict";
var $foreign = require("./foreign");
var Data_Array = require("../Data.Array");
var Data_Map = require("../Data.Map");
var Data_String = require("../Data.String");
var Control_Alt = require("../Control.Alt");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Control_MonadPlus = require("../Control.MonadPlus");
var Control_Plus = require("../Control.Plus");
var DOM = require("../DOM");
var Data_Foldable = require("../Data.Foldable");
var Data_Function_Uncurried = require("../Data.Function.Uncurried");
var Data_Int = require("../Data.Int");
var Data_List = require("../Data.List");
var Data_Maybe = require("../Data.Maybe");
var Data_Profunctor = require("../Data.Profunctor");
var Data_Tuple = require("../Data.Tuple");
var Global = require("../Global");
var Prelude = require("../Prelude");
var Pux_Html = require("../Pux.Html");
var Pux_Html_Attributes = require("../Pux.Html.Attributes");
var Signal = require("../Signal");
var Data_Functor = require("../Data.Functor");
var Data_Function = require("../Data.Function");
var Control_Apply = require("../Control.Apply");
var Control_Applicative = require("../Control.Applicative");
var Data_List_Types = require("../Data.List.Types");
var Control_Bind = require("../Control.Bind");
var Control_MonadZero = require("../Control.MonadZero");
var Data_Eq = require("../Data.Eq");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Ord = require("../Data.Ord");
var Data_Unit = require("../Data.Unit");
var Data_Semigroup = require("../Data.Semigroup");
var Pux_Html_Elements = require("../Pux.Html.Elements");
var Path = (function () {
    function Path(value0) {
        this.value0 = value0;
    };
    Path.create = function (value0) {
        return new Path(value0);
    };
    return Path;
})();
var Query = (function () {
    function Query(value0) {
        this.value0 = value0;
    };
    Query.create = function (value0) {
        return new Query(value0);
    };
    return Query;
})();
var Match = function (x) {
    return x;
};
var str = Match(function (r) {
    if (r instanceof Data_List_Types.Cons && r.value0 instanceof Path) {
        return Data_Maybe.Just.create(new Data_Tuple.Tuple(r.value1, r.value0.value0));
    };
    return Data_Maybe.Nothing.value;
});
var sampleUrl = $foreign.createUrlSignal(Signal.constant);
var parseQuery = function (s) {
    var parts = Data_List.fromFoldable(Data_Foldable.foldableArray)(Data_String.split("&")(Data_String.drop(1)(s)));
    var part2tuple = function (part) {
        var param$prime = Data_String.split("=")(part);
        return Control_Bind.bind(Data_Maybe.bindMaybe)(Control_MonadZero.guard(Data_Maybe.monadZeroMaybe)(Data_Array.length(param$prime) === 2))(function () {
            return Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Tuple.Tuple.create)(Data_Array.head(param$prime)))(Data_Array.index(param$prime)(1));
        });
    };
    return Query.create(Data_Map.fromFoldable(Data_Ord.ordString)(Data_List_Types.foldableList)(Data_List.catMaybes(Data_Functor.map(Data_List_Types.functorList)(part2tuple)(parts))));
};
var routeFromUrl = function (v) {
    if (v === "/") {
        return Data_List_Types.Nil.value;
    };
    var parsePath = function (query) {
        var prependPath = Data_Profunctor.lmap(Data_Profunctor.profunctorFn)(Path.create)(Data_List_Types.Cons.create);
        return function ($69) {
            return Data_List.drop(1)(Data_Foldable.foldr(Data_Foldable.foldableArray)(prependPath)(query)(Data_String.split("/")($69)));
        };
    };
    var $12 = Data_String.indexOf("?")(v);
    if ($12 instanceof Data_Maybe.Nothing) {
        return parsePath(Data_List_Types.Nil.value)(v);
    };
    if ($12 instanceof Data_Maybe.Just) {
        var queryPart = parseQuery(Data_String.drop($12.value0)(v));
        return parsePath(new Data_List_Types.Cons(queryPart, Data_List_Types.Nil.value))(Data_String.take($12.value0)(v));
    };
    throw new Error("Failed pattern match at Pux.Router line 160, column 20 - line 164, column 82: " + [ $12.constructor.name ]);
};
var router = function (url) {
    return function (v) {
        var result = v(routeFromUrl(url));
        return Data_Maybe.maybe(Data_Maybe.Nothing.value)(function ($70) {
            return Data_Maybe.Just.create(Data_Tuple.snd($70));
        })(result);
    };
};
var params = Match(function (r) {
    if (r instanceof Data_List_Types.Cons && r.value0 instanceof Query) {
        return Data_Maybe.Just.create(new Data_Tuple.Tuple(r.value1, r.value0.value0));
    };
    return Data_Maybe.Nothing.value;
});
var param = function (key) {
    return Match(function (r) {
        if (r instanceof Data_List_Types.Cons && r.value0 instanceof Query) {
            var $21 = Data_Map.lookup(Data_Ord.ordString)(key)(r.value0.value0);
            if ($21 instanceof Data_Maybe.Nothing) {
                return Data_Maybe.Nothing.value;
            };
            if ($21 instanceof Data_Maybe.Just) {
                return Data_Maybe.Just.create(new Data_Tuple.Tuple(new Data_List_Types.Cons(Query.create(Data_Map["delete"](Data_Ord.ordString)(key)(r.value0.value0)), r.value1), $21.value0));
            };
            throw new Error("Failed pattern match at Pux.Router line 117, column 7 - line 119, column 74: " + [ $21.constructor.name ]);
        };
        return Data_Maybe.Nothing.value;
    });
};
var num = Match(function (r) {
    if (r instanceof Data_List_Types.Cons && r.value0 instanceof Path) {
        var res = Global.readFloat(r.value0.value0);
        var $27 = Global["isNaN"](res);
        if ($27) {
            return Data_Maybe.Nothing.value;
        };
        if (!$27) {
            return Data_Maybe.Just.create(new Data_Tuple.Tuple(r.value1, res));
        };
        throw new Error("Failed pattern match at Pux.Router line 88, column 7 - line 91, column 28: " + [ $27.constructor.name ]);
    };
    return Data_Maybe.Nothing.value;
});
var matchFunctor = new Data_Functor.Functor(function (f) {
    return function (v) {
        return Match(function (r) {
            return Data_Maybe.maybe(Data_Maybe.Nothing.value)(function (t) {
                return Data_Maybe.Just.create(new Data_Tuple.Tuple(Data_Tuple.fst(t), f(Data_Tuple.snd(t))));
            })(v(r));
        });
    };
});
var matchApply = new Control_Apply.Apply(function () {
    return matchFunctor;
}, function (v) {
    return function (v1) {
        return Match(function (r1) {
            var $35 = v(r1);
            if ($35 instanceof Data_Maybe.Nothing) {
                return Data_Maybe.Nothing.value;
            };
            if ($35 instanceof Data_Maybe.Just) {
                var $36 = v1($35.value0.value0);
                if ($36 instanceof Data_Maybe.Nothing) {
                    return Data_Maybe.Nothing.value;
                };
                if ($36 instanceof Data_Maybe.Just) {
                    return Data_Maybe.Just.create(new Data_Tuple.Tuple($36.value0.value0, $35.value0.value1($36.value0.value1)));
                };
                throw new Error("Failed pattern match at Pux.Router line 148, column 28 - line 150, column 51: " + [ $36.constructor.name ]);
            };
            throw new Error("Failed pattern match at Pux.Router line 146, column 5 - line 150, column 51: " + [ $35.constructor.name ]);
        });
    };
});
var matchApplicative = new Control_Applicative.Applicative(function () {
    return matchApply;
}, function (a) {
    return function (r) {
        return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(new Data_Tuple.Tuple(r, a));
    };
});
var matchAlt = new Control_Alt.Alt(function () {
    return matchFunctor;
}, function (v) {
    return function (v1) {
        return Match(function (r) {
            var $45 = v(r);
            if ($45 instanceof Data_Maybe.Nothing) {
                return v1(r);
            };
            if ($45 instanceof Data_Maybe.Just) {
                return new Data_Maybe.Just($45.value0);
            };
            throw new Error("Failed pattern match at Pux.Router line 140, column 5 - line 142, column 24: " + [ $45.constructor.name ]);
        });
    };
});
var matchPlus = new Control_Plus.Plus(function () {
    return matchAlt;
}, function (r) {
    return Data_Maybe.Nothing.value;
});
var lit = function (part) {
    return Match(function (r) {
        if (r instanceof Data_List_Types.Cons && (r.value0 instanceof Path && r.value0.value0 === part)) {
            return Data_Maybe.Just.create(new Data_Tuple.Tuple(r.value1, Data_Unit.unit));
        };
        return Data_Maybe.Nothing.value;
    });
};
var link = function (url) {
    return function (attrs) {
        return function (children) {
            var newAttrs = Data_Semigroup.append(Data_Semigroup.semigroupArray)(attrs)([ $foreign.linkHandler(url), Pux_Html_Attributes.attr("href")(url) ]);
            return Pux_Html_Elements.element("a", newAttrs, children);
        };
    };
};
var $$int = Match(function (r) {
    if (r instanceof Data_List_Types.Cons && r.value0 instanceof Path) {
        return Data_Maybe.maybe(Data_Maybe.Nothing.value)(function ($71) {
            return Data_Maybe.Just.create(Data_Tuple.Tuple.create(r.value1)($71));
        })(Data_Int.fromString(r.value0.value0));
    };
    return Data_Maybe.Nothing.value;
});
var end = Match(function (r) {
    if (r instanceof Data_List_Types.Cons && (r.value0 instanceof Query && r.value1 instanceof Data_List_Types.Nil)) {
        return Data_Maybe.Just.create(new Data_Tuple.Tuple(Data_List_Types.Nil.value, Data_Unit.unit));
    };
    if (r instanceof Data_List_Types.Nil) {
        return Data_Maybe.Just.create(new Data_Tuple.Tuple(Data_List_Types.Nil.value, Data_Unit.unit));
    };
    return Data_Maybe.Nothing.value;
});
var bool = Match(function (r) {
    if (r instanceof Data_List_Types.Cons && (r.value0 instanceof Path && r.value0.value0 === "true")) {
        return Data_Maybe.Just.create(new Data_Tuple.Tuple(r.value1, true));
    };
    if (r instanceof Data_List_Types.Cons && (r.value0 instanceof Path && r.value0.value0 === "false")) {
        return Data_Maybe.Just.create(new Data_Tuple.Tuple(r.value1, false));
    };
    return Data_Maybe.Nothing.value;
});
var any = Match(function (r) {
    if (r instanceof Data_List_Types.Cons) {
        return Data_Maybe.Just.create(new Data_Tuple.Tuple(r.value1, Data_Unit.unit));
    };
    return Data_Maybe.Nothing.value;
});
module.exports = {
    Path: Path, 
    Query: Query, 
    any: any, 
    bool: bool, 
    end: end, 
    "int": $$int, 
    link: link, 
    lit: lit, 
    num: num, 
    param: param, 
    params: params, 
    router: router, 
    sampleUrl: sampleUrl, 
    str: str, 
    matchFunctor: matchFunctor, 
    matchAlt: matchAlt, 
    matchApply: matchApply, 
    matchPlus: matchPlus, 
    matchApplicative: matchApplicative, 
    navigateTo: $foreign.navigateTo
};
//# sourceMappingURL=index.js.map
